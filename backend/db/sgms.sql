-- 创建表空间
CREATE TABLESPACE SGMS DATAFILE 'D:\\oracle\\oradata\\ORCL2\\SGMS.dbf' SIZE 100M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED;

-- 创建用户
CREATE USER c##sgms IDENTIFIED BY sgms;
-- 授予权限
GRANT CREATE SESSION,
CREATE TABLE,
CREATE SEQUENCE,
CREATE VIEW TO c##sgms;
-- 将表空间设置为用户的默认表空间
ALTER USER c##sgms DEFAULT TABLESPACE SGMS;
-- 使更改生效
ALTER USER c##sgms ACCOUNT LOCK;
ALTER USER c##sgms ACCOUNT UNLOCK;

CREATE TABLE stu_tb (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1,
    name VARCHAR2 (100),
    campus_id VARCHAR2 (20),
    major VARCHAR2 (100),
    grade VARCHAR2 (4),
    CONSTRAINT pk_stu PRIMARY KEY (id)
);

CREATE TABLE course_tb (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1,
    name VARCHAR2(100) NOT NULL,
    credit NUMBER(3,1),
    daily_ratio NUMBER(3,2) CHECK (daily_ratio >= 0 AND daily_ratio <= 1),
    CONSTRAINT pk_course PRIMARY KEY (id)
);

CREATE TABLE class_tb (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1,
    name VARCHAR2(100) NOT NULL,
    capacity NUMBER CHECK (capacity > 0),
    CONSTRAINT pk_class PRIMARY KEY (id)
);

CREATE TABLE stu_class_tb (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1,
    stu_id NUMBER NOT NULL,
    class_id NUMBER NOT NULL,
    CONSTRAINT pk_stu_class PRIMARY KEY (id),
    CONSTRAINT fk_stu_id FOREIGN KEY (stu_id) REFERENCES stu_tb(id),
    CONSTRAINT fk_class_id FOREIGN KEY (class_id) REFERENCES class_tb(id)
);

CREATE TABLE cou_class_tb (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1,
    class_id NUMBER NOT NULL,
    course_id NUMBER NOT NULL,
    CONSTRAINT pk_cou_class PRIMARY KEY (id),
    CONSTRAINT fk_cou_class_class_id FOREIGN KEY (class_id) REFERENCES class_tb(id),
    CONSTRAINT fk_cou_class_course_id FOREIGN KEY (course_id) REFERENCES course_tb(id)
);

CREATE TABLE stu_cou_score_tb (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1,
    stu_id NUMBER NOT NULL,
    course_id NUMBER NOT NULL,
    daily_score NUMBER CHECK (daily_score >= 0 AND daily_score <= 100),
    exam_score NUMBER CHECK (exam_score >= 0 AND exam_score <= 100),
    CONSTRAINT pk_stu_cou_score PRIMARY KEY (id),
    CONSTRAINT fk_stu_cou_score_stu_id FOREIGN KEY (stu_id) REFERENCES stu_tb(id),
    CONSTRAINT fk_stu_cou_score_course_id FOREIGN KEY (course_id) REFERENCES course_tb(id)
);

CREATE OR REPLACE VIEW stu_cou_score_view AS
SELECT
    scs.stu_id,
    scs.course_id,
    scs.daily_score,
    c.daily_ratio,
    scs.exam_score,
    1 - c.daily_ratio AS exam_ratio,    -- 计算考试成绩占比
    scs.daily_score * c.daily_ratio + scs.exam_score * (1 - c.daily_ratio) AS final_score   -- 按照上述规则计算最终成绩
FROM stu_cou_score_tb scs
JOIN course_tb c ON scs.course_id = c.id;